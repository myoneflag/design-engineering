{
  "name": "h2x-cloudformation",
  "version": "1.0.0",
  "description": "Cloudformation scripts and utilities",
  "main": "index.js",
  "scripts": {
    "clean": "rm -r dist/**",
    "validate": "source config/config.$EnvName.env && run-s prep-template validate-template",
    "prep": "source config/config.$EnvName.env && source ../docker/config/config.env && source ../docker/config/config.$EnvName.env && run-s prep-dist prep-template prep-artifacts upload-artifacts",    
    "create": "source config/config.$EnvName.env && source ../docker/config/config.env && source ../docker/config/config.$EnvName.env && run-s prep create-stack wait-create-stack describe-stack",
    "update": "source config/config.$EnvName.env && source ../docker/config/config.env && source ../docker/config/config.$EnvName.env && run-s prep update-stack wait-update-stack describe-stack",
    "delete": "source config/config.$EnvName.env && source ../docker/config/config.env && source ../docker/config/config.$EnvName.env && run-s delete-stack wait-delete-stack",
    "prep-dist": "mkdir -p dist/${GIT_COMMIT}/web && mkdir -p dist/${GIT_COMMIT}/worker",
    "prep-template": "jsmin template.json > dist/${GIT_COMMIT}/template.cfn.json && export DATESTAMP=`date +\"%m%d%y%H%M%S\"` && sed -i '' \"s/_DATESTAMP_/${DATESTAMP}/g\" dist/${GIT_COMMIT}/template.cfn.json" ,
    "prep-artifacts": "cp ../docker/${WEB_DOCKERRUN_FILE} dist/${GIT_COMMIT}/web && cp ../docker/${WORKER_DOCKERRUN_FILE} dist/${GIT_COMMIT}/worker && cp -r elasticbeanstalk/web/ dist/${GIT_COMMIT}/web && cp -r elasticbeanstalk/worker/ dist/${GIT_COMMIT}/worker && cd dist/${GIT_COMMIT}/web && zip -r ../web.zip .ebextensions/* Dockerrun.aws.json && cd ../worker && zip -r ../worker.zip .ebextensions/* Dockerrun.aws.json",
    "upload-artifacts": "aws s3 cp dist/${GIT_COMMIT}/web.zip s3://${ELASTICBEANSTALK_SOURCE_BUCKET}/deploy/${EnvName}/${GIT_COMMIT}/web.zip --profile $AWSProfile && aws s3 cp dist/${GIT_COMMIT}/worker.zip s3://${ELASTICBEANSTALK_SOURCE_BUCKET}/deploy/${EnvName}/${GIT_COMMIT}/worker.zip --profile $AWSProfile", 
    "validate-template": "aws cloudformation validate-template  --profile $AWSProfile --template-body file://dist/${GIT_COMMIT}/template.cfn.json",
    "create-stack": "aws cloudformation create-stack --stack-name $CFStackName --profile $AWSProfile --template-body file://dist/${GIT_COMMIT}/template.cfn.json --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --parameters ParameterKey=Ec2InstanceKeyname,ParameterValue=$Ec2InstanceKeyname ParameterKey=EnvName,ParameterValue=$EnvName ParameterKey=DnsZoneId,ParameterValue=${DnsZoneId} ParameterKey=DnsZoneName,ParameterValue=${DnsZoneName} ParameterKey=DBSnapshotARNRestore,ParameterValue=${DBSnapshotARNRestore} ParameterKey=DBMasterUserName,ParameterValue=${DBMasterUserName} ParameterKey=DBMasterUserPassword,ParameterValue=${DBMasterUserPassword} ParameterKey=MQUsername,ParameterValue=${MQUsername} ParameterKey=MQPassword,ParameterValue=${MQPassword} ParameterKey=DBName,ParameterValue=${DBName} ParameterKey=SourceBucketName,ParameterValue=${ELASTICBEANSTALK_SOURCE_BUCKET} ParameterKey=SourcePathWeb,ParameterValue=deploy/${EnvName}/${GIT_COMMIT}/web.zip ParameterKey=SourcePathWorker,ParameterValue=deploy/${EnvName}/${GIT_COMMIT}/worker.zip",
    "wait-create-stack": "aws cloudformation wait stack-create-complete --stack-name $CFStackName --profile $AWSProfile",
    "update-stack": "aws cloudformation update-stack --stack-name $CFStackName --profile $AWSProfile --template-body file://dist/${GIT_COMMIT}/template.cfn.json --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --parameters ParameterKey=Ec2InstanceKeyname,ParameterValue=$Ec2InstanceKeyname ParameterKey=EnvName,ParameterValue=$EnvName ParameterKey=DnsZoneId,ParameterValue=${DnsZoneId} ParameterKey=DnsZoneName,ParameterValue=${DnsZoneName} ParameterKey=DBSnapshotARNRestore,ParameterValue=${DBSnapshotARNRestore} ParameterKey=DBMasterUserName,ParameterValue=${DBMasterUserName} ParameterKey=DBMasterUserPassword,ParameterValue=${DBMasterUserPassword} ParameterKey=MQUsername,ParameterValue=${MQUsername} ParameterKey=MQPassword,ParameterValue=${MQPassword} ParameterKey=DBName,ParameterValue=${DBName} ParameterKey=SourceBucketName,ParameterValue=${ELASTICBEANSTALK_SOURCE_BUCKET} ParameterKey=SourcePathWeb,ParameterValue=deploy/${EnvName}/${GIT_COMMIT}/web.zip ParameterKey=SourcePathWorker,ParameterValue=deploy/${EnvName}/${GIT_COMMIT}/worker.zip",
    "wait-update-stack": "aws cloudformation wait stack-update-complete --stack-name $CFStackName --profile $AWSProfile",
    "describe-stack": "aws cloudformation describe-stack-resources --stack-name $CFStackName --profile $AWSProfile --output json --query 'StackResources[*].{LogicalResourceId:LogicalResourceId,PhysicalResourceId:PhysicalResourceId,ResourceStatus:ResourceStatus}'",
    "delete-stack": "aws cloudformation delete-stack --stack-name $CFStackName --profile $AWSProfile",
    "wait-delete-stack": "aws cloudformation wait stack-delete-complete --stack-name $CFStackName --profile $AWSProfile"
  },
  "repository": {
    "type": "git",
    "url": "git+https://gitlab.com/info892/H2X.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://gitlab.com/info892/H2X/issues"
  },
  "homepage": "https://gitlab.com/info892/H2X#readme",
  "dependencies": {
    "jsmin": "^1.0.1",
    "npm-run-all": "^4.1.5"
  }
}
