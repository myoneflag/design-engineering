{
  "name": "h2x-cloudformation",
  "version": "1.0.0",
  "description": "H2X Cloudformation scripts and utilities",
  "main": "index.js",
  "repository": "gitlab:info892/H2X",
  "license": "UNLICENSED",
  "private": true,
  "scripts": {
    "clean": "rm -r dist/**",
    "prep": ". ../config/build.env && run-s prep-dist prep-template prep-params prep-artifacts upload-artifacts",
    "validate": ". ../config/build.env && run-s prep validate-template",
    "create": ". ../config/build.env && run-s prep create-stack wait-create-stack describe-stack",
    "update": ". ../config/build.env && run-s prep update-stack wait-update-stack describe-stack",
    "delete": ". ../config/build.env && run-s delete-stack wait-delete-stack",
    "prep-dist": "mkdir -p ${WEB_DIST} && mkdir -p ${WORKER_DIST}",
    "prep-template": "jsmin template.json > dist/${GIT_COMMIT}/template.cfn.json.1 && export DATESTAMP=`date +\"%m%d%y%H%M%S\"` && sed \"s/_DATESTAMP_/${DATESTAMP}/g\" dist/${GIT_COMMIT}/template.cfn.json.1 > dist/${GIT_COMMIT}/template.cfn.json",
    "prep-params": "( echo \"cat <<EOF\" ; cat parameters.json ; echo EOF ) | sh > dist/${GIT_COMMIT}/parameters.cfn.json",
    "prep-artifacts": "cp ../docker/${WEB_DIST}/Dockerrun.aws.json ${WEB_DIST} && cp ../docker/${WORKER_DIST}/Dockerrun.aws.json ${WORKER_DIST} && cp -r elasticbeanstalk/web/ ${WEB_DIST} && cp -r elasticbeanstalk/worker/ ${WORKER_DIST} && cd ${WEB_DIST} && zip -r ../web.zip .ebextensions/* Dockerrun.aws.json && cd ../worker && zip -r ../worker.zip .ebextensions/* Dockerrun.aws.json",
    "upload-artifacts": "aws s3 cp ${WEB_DIST}.zip s3://${SourceBucketName}/${SourcePathWeb} && aws s3 cp ${WORKER_DIST}.zip s3://${SourceBucketName}/${SourcePathWorker}",
    "validate-template": "aws cloudformation validate-template --template-body file://dist/${GIT_COMMIT}/template.cfn.json",
    "stack-exists": ". ../config/build.env && aws cloudformation describe-stacks --region ${AWSRegion} --stack-name ${CFStackName} || echo 'false'",
    "create-stack": "aws cloudformation create-stack --stack-name $CFStackName --template-body file://dist/${GIT_COMMIT}/template.cfn.json --parameters file://dist/${GIT_COMMIT}/parameters.cfn.json --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM",
    "wait-create-stack": "aws cloudformation wait stack-create-complete --stack-name $CFStackName",
    "update-stack": "aws cloudformation update-stack --stack-name $CFStackName --template-body file://dist/${GIT_COMMIT}/template.cfn.json --parameters file://dist/${GIT_COMMIT}/parameters.cfn.json --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM",
    "wait-update-stack": "aws cloudformation wait stack-update-complete --stack-name $CFStackName",
    "describe-stack": "aws cloudformation describe-stack-resources --stack-name $CFStackName --output json --query 'StackResources[*].{LogicalResourceId:LogicalResourceId,PhysicalResourceId:PhysicalResourceId,ResourceStatus:ResourceStatus}'",
    "delete-stack": "aws cloudformation delete-stack --stack-name $CFStackName",
    "wait-delete-stack": "aws cloudformation wait stack-delete-complete --stack-name $CFStackName"
  },
  "dependencies": {
    "jsmin": "^1.0.1",
    "npm-run-all": "^4.1.5"
  }
}
