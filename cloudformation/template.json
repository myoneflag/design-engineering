{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "H2X Web and Worker Enviromment Setup Template",
    "Metadata": {  
    },
    "Parameters": {
        "EnvName": {
            "Description": "Enviroment name, used in DNS, database names, etc.",
            "Type": "String",
            "Default": "test"
        },
        "Ec2InstanceKeyname": {
            "Description": "Keypair name for SSH access on instances - keypair must be created prior to Stack creation",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "WebInstanceType": {
            "Description": "Web server instance type",
            "Type": "String",
            "Default": "t2.small"
        },
        "WorkerInstanceType": {
            "Description": "Worker instance type",
            "Type": "String",
            "Default": "t2.small"
        },
        "EnvTag": {
          "Description": "Extra name tag for elastic beanstalk resources names",
          "Type": "String",
          "Default": "-2"
        }
    },
    "Resources": {        
        // Instance Roles
        "InstanceProfile": {
          "Type": "AWS::IAM::InstanceProfile",
          "Properties": {
              "Path": "/",
              "Roles": [ 
                "aws-elasticbeanstalk-ec2-role"
              ]
          }
        },

        // Security groups
        "WebSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : "h2x-web-${EnvName}-sg",
            "SecurityGroupIngress" : [ 
            ]
          }
        },

        "WorkerSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : "h2x-worker-${EnvName}-sg",
            "SecurityGroupIngress" : [ 
            ]
          }
        },

        // Web environment
        "WebApplication": {
          "Type": "AWS::ElasticBeanstalk::Application",
          "Properties": {
             "ApplicationName": { "Fn::Sub": "H2X-web-${EnvName}${EnvTag}" },
             "Description": { "Fn::Sub": "H2X ${EnvName} Web Application" }
          }
        },
        "WebApplicationVersion": {
          "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
          "Properties": {
            "ApplicationName": { "Ref": "WebApplication" },
            "Description": { "Fn::Sub": "H2X-web-${EnvName}" },
            "SourceBundle": { 
              "S3Bucket": { "Fn::Sub": "elasticbeanstalk-${AWS::Region}-${AWS::AccountId}" }, 
              "S3Key": "test/docker.zip"
             }
          }
        },
        "WebApplicationConfiguration": {
          "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
          "Properties": {  
            "ApplicationName": { "Ref": "WebApplication" },
            "Description": { "Fn::Sub": "${WebApplication} configuration" },
            "OptionSettings": [ 
              {
                "Namespace": "aws:autoscaling:launchconfiguration",
                "OptionName": "IamInstanceProfile",
                "Value": { "Ref": "InstanceProfile" }
              },
              {
                "Namespace" : "aws:autoscaling:launchconfiguration",
                "OptionName" : "EC2KeyName",
                "Value" : { "Ref": "Ec2InstanceKeyname" }
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "StreamLogs",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "RetentionInDays",
                "Value": 30
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "HealthStreamingEnabled",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                "OptionName": "SystemType",
                "Value": "enhanced"
              },
              { 
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "RetentionInDays",
                "Value": 30 
              },
              {
                "Namespace": "aws:elasticbeanstalk:environment",
                "OptionName": "LoadBalancerType",
                "Value": "application"
              },
              {
                "Namespace": "aws:elasticbeanstalk:application:environment",
                "OptionName": "TEST_VAR",
                "Value": "TEST_VAL"
              }
            ],
            "SolutionStackName": "64bit Amazon Linux 2 v3.2.6 running Docker",
          } 
        },
        "WebEnvironment": {
           "Type": "AWS::ElasticBeanstalk::Environment",
           "Properties": {
              "ApplicationName": { "Ref": "WebApplication" },
              "EnvironmentName":  { "Fn::Sub": "H2X-web-${EnvName}${EnvTag}" },              
              "Description": { "Fn::Sub": "H2X ${EnvName} Web Environment" },
              "VersionLabel": { "Ref": "WebApplicationVersion" },
              "TemplateName": { "Ref": "WebApplicationConfiguration" },
              "Tier": {
                "Name" : "WebServer",
                "Type" : "Standard"
              }
           }
        },

        // Worker Enviroment
        "WorkerApplication": {
          "Type": "AWS::ElasticBeanstalk::Application",
          "Properties": {
             "ApplicationName": { "Fn::Sub": "H2X-worker-${EnvName}${EnvTag}" },
             "Description": { "Fn::Sub": "H2X ${EnvName} Worker Application" }
          }
        },
        "WorkerApplicationVersion": {
          "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
          "Properties": {
            "ApplicationName": { "Ref": "WorkerApplication" },
            "Description": { "Fn::Sub": "H2X-worker-${EnvName}" },
            "SourceBundle": { 
              "S3Bucket": { "Fn::Sub": "elasticbeanstalk-${AWS::Region}-${AWS::AccountId}" }, 
              "S3Key": "test/docker-multicontainer-v2.zip"
             }
          }
        },
        "WorkerApplicationConfiguration": {
          "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
          "Properties": {  
            "ApplicationName": { "Ref": "WorkerApplication" },
            "Description": { "Fn::Sub": "${WorkerApplication} configuration" },
            "OptionSettings": [ 
              {
                "Namespace": "aws:autoscaling:launchconfiguration",
                "OptionName": "IamInstanceProfile",
                "Value": { "Ref": "InstanceProfile" }
              },
              {
                "Namespace" : "aws:autoscaling:launchconfiguration",
                "OptionName" : "EC2KeyName",
                "Value" : { "Ref": "Ec2InstanceKeyname" }
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "StreamLogs",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "RetentionInDays",
                "Value": 30
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "HealthStreamingEnabled",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                "OptionName": "SystemType",
                "Value": "enhanced"
              },              
              { 
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "RetentionInDays",
                "Value": 30 
              },
              {
                "Namespace": "aws:elasticbeanstalk:application:environment",
                "OptionName": "TEST_VAR",
                "Value": "TEST_VAL"
              }
            ],
            "SolutionStackName": "64bit Amazon Linux 2018.03 v2.25.2 running Multi-container Docker 19.03.13-ce (Generic)"
          } 
        },
        "WorkerEnvironment": {
           "Type": "AWS::ElasticBeanstalk::Environment",
           "Properties": {
              "ApplicationName": { "Ref": "WorkerApplication" },
              "EnvironmentName":  { "Fn::Sub": "H2X-worker-${EnvName}${EnvTag}" },
              "Description": { "Fn::Sub": "H2X ${EnvName} Worker Environment" },
              "VersionLabel": { "Ref": "WorkerApplicationVersion" },
              "TemplateName": { "Ref": "WorkerApplicationConfiguration" },              
              "Tier": {
                "Name" : "Worker",
                "Type" : "SQS/HTTP"
              }
           }
        }, 
        
        // RDS
        "DBSecurityGroup": {
           "Type": "AWS::RDS::DBSecurityGroup",
           "Properties": {
              "GroupDescription": "h2x-db-${EnvName}-sg",
              "DBSecurityGroupIngress": [ 
                {
                  "EC2SecurityGroupId" : { "Fn::GetAtt": [ "WebSecurityGroup", "GroupId" ] }
                },
                {
                  "EC2SecurityGroupId" : { "Fn::GetAtt": [ "WorkerSecurityGroup", "GroupId" ] }
                }
               ]
           }
        },

        "DBInstance": {
          "Type": "AWS::RDS::DBInstance",
          "Properties": {
            "AllocatedStorage": "100",
            "DBInstanceIdentifier": {"Fn::Sub": "h2x-db-${EnvName}" },
            "DBInstanceClass": "db.t3.small",
            "DBSecurityGroups": [ {"Ref": "DBSecurityGroup"} ],
            "DeleteAutomatedBackups": false,
            "Engine": "postgres",
            "EngineVersion": "13.1",
            "MultiAZ": "false",
            "PubliclyAccessible": "false",
            "MasterUsername": "h2xdbuser",
            "MasterUserPassword": "FLorpUTHoupe"
          }
        },

        // MQ
        "MQBroker": {
          "Type" : "AWS::AmazonMQ::Broker",
          "Properties" : {
              "AutoMinorVersionUpgrade" : false,
              "BrokerName" : {"Fn::Sub": "h2x-mq-${EnvName}" },
              "DeploymentMode" : "SINGLE_INSTANCE",
              "EngineType" : "ACTIVEMQ",
              "EngineVersion" : "5.15.13",
              "HostInstanceType" : "mq.t2.micro",
              "PubliclyAccessible" : false,
              "SecurityGroups" : [ { "Fn::GetAtt": [ "WebSecurityGroup", "GroupId" ] } ],
              "Users" : [ 
                {
                  "ConsoleAccess" : true,
                  "Password" : "TEremoRmyoUT",
                  "Username" : "emqemqemq"
                }
               ]
            }
        }
    },
    "Outputs": {

    }
}