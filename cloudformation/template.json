{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "H2X Web and Worker Enviromment Setup Template",
    "Metadata": {  
    },
    "Parameters": {
      "EnvName": {
        "Description": "Enviroment name, used in DNS, database names, etc.",
        "Type": "String",
        "Default": "test"
      },
      "Ec2InstanceKeyname": {
        "Description": "Keypair name for SSH access on instances - keypair must be created prior to Stack creation",
        "Type": "AWS::EC2::KeyPair::KeyName"
      },
      "WebInstanceType": {
        "Description": "Web server instance type",
        "Type": "String",
        "Default": "t2.small"
      },
      "WorkerInstanceType": {
        "Description": "Worker instance type",
        "Type": "String",
        "Default": "t2.small"
      },
      "DnsZoneId": {
        "Description": "HostedZoneID of the DNS zone to create the main records pointing to the web loadbalancer",
        "Type": "AWS::Route53::HostedZone::Id"
      },
      "DnsZoneName": {
        "Description": "HostedZone DNS zone to create the main records pointing to the web loadbalancer",
        "Type": "String"
      },        
      "DBSnapshotARNRestore": {
        "Description": "ARN of the DB snapshot to use to recreate the RDS instance",
        "Type": "String",
        "Default": ""
      },
      "WebVersion": {
        "Description": "Extra name tag for major upgrades to Web EB",
        "Type": "String",
        "Default": ""
      },
      "WorkerVersion": {
        "Description": "Extra name tag for major upgrades to Worker EB",
        "Type": "String",
        "Default": ""
      },
      "DbVersion": {
        "Description": "Extra name tag for major upgrades to RDS DB",
        "Type": "String",
        "Default": "v1"
      }
    },
    "Conditions" : {
      "UseRDSSnapshot": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "DBSnapshotARNRestore" }, "" ]}] }
    },
    "Resources": {        
        // Instance Roles
        "InstanceProfile": {
          "Type": "AWS::IAM::InstanceProfile",
          "Properties": {
              "Path": "/",
              "Roles": [ 
                "aws-elasticbeanstalk-ec2-role"
              ]
          }
        },

        // Security groups
        "WebSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : { "Fn::Sub": "h2x-web-${EnvName}-sg" },
            "SecurityGroupIngress" : [ 
            ]
          }
        },

        "WorkerSecurityGroup" : {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : { "Fn::Sub": "h2x-worker-${EnvName}-sg" },
            "SecurityGroupIngress" : [ 
            ]
          }
        },

        // Web environment
        "WebApplication": {
          "Type": "AWS::ElasticBeanstalk::Application",
          "Properties": {
             "ApplicationName": { "Fn::Sub": "H2X-web-${EnvName}${WebVersion}" },
             "Description": { "Fn::Sub": "H2X ${EnvName} Web Application" }
          }
        },
        "WebApplicationVersion": {
          "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
          "Properties": {
            "ApplicationName": { "Ref": "WebApplication" },
            "Description": { "Fn::Sub": "H2X-web-${EnvName}" },
            "SourceBundle": { 
              "S3Bucket": { "Fn::Sub": "elasticbeanstalk-${AWS::Region}-${AWS::AccountId}" }, 
              "S3Key": "test/docker.zip"
             }
          }
        },
        "WebApplicationConfiguration": {
          "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
          "Properties": {  
            "ApplicationName": { "Ref": "WebApplication" },
            "Description": { "Fn::Sub": "${WebApplication} configuration" },
            "OptionSettings": [ 
              {
                "Namespace": "aws:autoscaling:launchconfiguration",
                "OptionName": "IamInstanceProfile",
                "Value": { "Ref": "InstanceProfile" }
              },
              {
                "Namespace" : "aws:autoscaling:launchconfiguration",
                "OptionName" : "EC2KeyName",
                "Value" : { "Ref": "Ec2InstanceKeyname" }
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "StreamLogs",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "RetentionInDays",
                "Value": 30
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "HealthStreamingEnabled",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                "OptionName": "SystemType",
                "Value": "enhanced"
              },
              { 
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "RetentionInDays",
                "Value": 30 
              },
              {
                "Namespace": "aws:elasticbeanstalk:environment",
                "OptionName": "LoadBalancerType",
                "Value": "application"
              },
              {
                "Namespace": "aws:elasticbeanstalk:sns:topics",
                "OptionName": "Notification Topic ARN",
                "Value": { "Ref": "WebDeployNotification" }
              },
              {
                "Namespace": "aws:elbv2:listener:443",
                "OptionName": "Protocol",
                "Value": "HTTPS"
              },
              {
                "Namespace": "aws:elbv2:listener:443",
                "OptionName": "SSLCertificateArns",
                "Value": { "Ref": "SSLCertificate"}
              },
              {
                "Namespace": "aws:elasticbeanstalk:application:environment",
                "OptionName": "TEST_VAR",
                "Value": "TEST_VAL"
              }
            ],
            "SolutionStackName": "64bit Amazon Linux 2 v3.2.6 running Docker"
          } 
        },

        "WebEnvironment": {
          "Type": "AWS::ElasticBeanstalk::Environment",
          "Properties": {
             "ApplicationName": { "Ref": "WebApplication" },
             "EnvironmentName":  { "Fn::Sub": "H2X-web-${EnvName}${WebVersion}" },              
             "Description": { "Fn::Sub": "H2X ${EnvName} Web Environment" },
             "VersionLabel": { "Ref": "WebApplicationVersion" },
             "TemplateName": { "Ref": "WebApplicationConfiguration" },
             "Tier": {
               "Name" : "WebServer",
               "Type" : "Standard"
             }
          }
       },

        // Worker Enviroment
        "WorkerApplication": {
          "Type": "AWS::ElasticBeanstalk::Application",
          "Properties": {
             "ApplicationName": { "Fn::Sub": "H2X-worker-${EnvName}${WorkerVersion}" },
             "Description": { "Fn::Sub": "H2X ${EnvName} Worker Application" }
          }
        },
        "WorkerApplicationVersion": {
          "Type": "AWS::ElasticBeanstalk::ApplicationVersion",
          "Properties": {
            "ApplicationName": { "Ref": "WorkerApplication" },
            "Description": { "Fn::Sub": "H2X-worker-${EnvName}" },
            "SourceBundle": { 
              "S3Bucket": { "Fn::Sub": "elasticbeanstalk-${AWS::Region}-${AWS::AccountId}" }, 
              "S3Key": "test/docker-multicontainer-v2.zip"
             }
          }
        },
        "WorkerApplicationConfiguration": {
          "Type": "AWS::ElasticBeanstalk::ConfigurationTemplate",
          "Properties": {  
            "ApplicationName": { "Ref": "WorkerApplication" },
            "Description": { "Fn::Sub": "${WorkerApplication} configuration" },
            "OptionSettings": [ 
              {
                "Namespace": "aws:autoscaling:launchconfiguration",
                "OptionName": "IamInstanceProfile",
                "Value": { "Ref": "InstanceProfile" }
              },
              {
                "Namespace" : "aws:autoscaling:launchconfiguration",
                "OptionName" : "EC2KeyName",
                "Value" : { "Ref": "Ec2InstanceKeyname" }
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "StreamLogs",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs",
                "OptionName": "RetentionInDays",
                "Value": 30
              },
              {
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "HealthStreamingEnabled",
                "Value": true
              },
              {
                "Namespace": "aws:elasticbeanstalk:healthreporting:system",
                "OptionName": "SystemType",
                "Value": "enhanced"
              },              
              { 
                "Namespace": "aws:elasticbeanstalk:cloudwatch:logs:health",
                "OptionName": "RetentionInDays",
                "Value": 30 
              },
              {
                "Namespace": "aws:elasticbeanstalk:sqsd",
                "OptionName": "WorkerQueueURL",
                "Value": { "Ref": "WorkerQueue" }
              },
              {
                "Namespace": "aws:elasticbeanstalk:sqsd",
                "OptionName": "HttpPath",
                "Value": "/workermessage"
              },
              {
                "Namespace": "aws:elasticbeanstalk:application:environment",
                "OptionName": "TEST_VAR",
                "Value": "TEST_VAL"
              }
            ],
            "SolutionStackName": "64bit Amazon Linux 2018.03 v2.25.2 running Multi-container Docker 19.03.13-ce (Generic)"
          } 
        },
        "WorkerEnvironment": {
           "Type": "AWS::ElasticBeanstalk::Environment",
           "Properties": {
              "ApplicationName": { "Ref": "WorkerApplication" },
              "EnvironmentName":  { "Fn::Sub": "H2X-worker-${EnvName}${WorkerVersion}" },
              "Description": { "Fn::Sub": "H2X ${EnvName} Worker Environment" },
              "VersionLabel": { "Ref": "WorkerApplicationVersion" },
              "TemplateName": { "Ref": "WorkerApplicationConfiguration" },              
              "Tier": {
                "Name" : "Worker",
                "Type" : "SQS/HTTP"
              }
           }
        }, 
        
        // RDS
        "DBSecurityGroup": {
           "Type": "AWS::RDS::DBSecurityGroup",
           "Properties": {
              "GroupDescription": "h2x-db-${EnvName}-sg",
              "DBSecurityGroupIngress": [ 
                {
                  "EC2SecurityGroupId" : { "Fn::GetAtt": [ "WebSecurityGroup", "GroupId" ] }
                },
                {
                  "EC2SecurityGroupId" : { "Fn::GetAtt": [ "WorkerSecurityGroup", "GroupId" ] }
                }
               ]
           }
        },

        "DBInstance": {
          "Type": "AWS::RDS::DBInstance",
          "Properties": {
            "DBSnapshotIdentifier": {
              "Fn::If" : [
                "UseRDSSnapshot",
                {"Ref" : "DBSnapshotARNRestore"},
                {"Ref" : "AWS::NoValue"}
              ]
            },
            "AllocatedStorage": "100",
            "AllowMajorVersionUpgrade": true,
            "DBInstanceIdentifier": { "Fn::Sub": "h2x-db-${EnvName}${DbVersion}" },
            "DBInstanceClass": "db.t3.small",
            "DBSecurityGroups": [ {"Ref": "DBSecurityGroup"} ],
            "DeleteAutomatedBackups": false,
            "Engine": "postgres",
            "EngineVersion": "13.1",
            "MultiAZ": "false",
            "PubliclyAccessible": "false",
            "MasterUsername": "h2xdbuser",
            "MasterUserPassword": "FLorpUTHoupe"
          }
        },

        // MQ
        "MQBroker": {
          "Type" : "AWS::AmazonMQ::Broker",
          "DependsOn": [ "WebSecurityGroup" ],
          "Properties" : {
              "AutoMinorVersionUpgrade" : false,
              "BrokerName" : {"Fn::Sub": "h2x-mq-${EnvName}" },
              "DeploymentMode" : "SINGLE_INSTANCE",
              "EngineType" : "ACTIVEMQ",
              "EngineVersion" : "5.15.13",
              "HostInstanceType" : "mq.t2.micro",
              "PubliclyAccessible" : false,
              "SecurityGroups" : [ { "Fn::GetAtt": [ "WebSecurityGroup", "GroupId" ] } ],
              "Users" : [ 
                {
                  "ConsoleAccess" : true,
                  "Password" : "TEremoRmyoUT",
                  "Username" : "emqemqemq"
                }
               ]
            }
        },

        // Web environment SNS topic for Deploy Notifications
        "WebDeployNotification": {
          "Type" : "AWS::SNS::Topic",
          "Properties" : {
              "TopicName" : { "Fn::Sub": "h2x-sns-${EnvName}-deploy" },
              "DisplayName" : { "Fn::Sub": "h2x-sns-${EnvName}-deploy" },
              "Subscription" : [ 
                {
                  "Endpoint" : { "Fn::GetAtt": [ "WorkerQueue", "Arn" ] },
                  "Protocol" : "sqs"
                }              
              ]
            }
        },

        // Worker queue
        "WorkerQueue": {
           "Type": "AWS::SQS::Queue",
           "Properties": {
              "QueueName": { "Fn::Sub": "h2x-worker-queue-${EnvName}" },
              "VisibilityTimeout": "300"
           }
        }, 

        //S3 buckets
        "PdfBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "Private",
            "BucketName": { "Fn::Sub": "h2x-s3-pdf-${EnvName}" }
          }
        },
        "PdfRendersBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "AccessControl": "Private",
            "BucketName": { "Fn::Sub": "h2x-s3-pdfrenders-${EnvName}" }
          }
        }, 

        // DNS record
        "DnsRecord": {
          "Type": "AWS::Route53::RecordSet",
          "Properties": {
            "Name": { "Fn::Sub": "app-${EnvName}.${DnsZoneName}" },
            "Type": "CNAME",
            "TTL": "900",
            "HostedZoneId": { "Ref": "DnsZoneId" },
            "ResourceRecords": [ { "Fn::GetAtt": [ "WebEnvironment", "EndpointURL" ]} ]
          }
        }, 

        //SSL certificate
        "SSLCertificate":{
          "Type":"AWS::CertificateManager::Certificate",
          "Properties":{
            "DomainName": { "Fn::Sub": "app-${EnvName}.${DnsZoneName}" },
            "ValidationMethod": "DNS",
            "DomainValidationOptions" : [
                {
                  "DomainName" : { "Fn::Sub": "app-${EnvName}.${DnsZoneName}" },
                  "HostedZoneId": { "Ref": "DnsZoneId" }
                }
              ]
            }
        }
    },
    "Mappings": {
      "RegionParams": {
        "us-east-1": { "EBHostedZoneId": "Z117KPS5GTRQ2G" },
        "us-east-2": { "EBHostedZoneId": "Z14LCN19Q5QHIC" },
        "us-west-1": { "EBHostedZoneId": "Z1LQECGX5PH1X" },
        "us-west-2": { "EBHostedZoneId": "Z38NKT9BP95V3O" },
        "af-south-1": { "EBHostedZoneId": "Z1EI3BVKMKK4AM" },
        "ap-east-1": { "EBHostedZoneId": "ZPWYUBWRU171A" },
        "ap-south-1": { "EBHostedZoneId": "Z18NTBI3Y7N9TZ" },
        "ap-northeast-3": { "EBHostedZoneId": "ZNE5GEY1TIAGY" },
        "ap-northeast-2": { "EBHostedZoneId": "Z3JE5OI70TWKCP" },
        "ap-southeast-1": { "EBHostedZoneId": "Z16FZ9L249IFLT" },
        "ap-southeast-2": { "EBHostedZoneId": "Z2PCDNR3VC2G1N" },
        "ap-northeast-1": { "EBHostedZoneId": "Z1R25G3KIG2GBW" },
        "ca-central-1": { "EBHostedZoneId": "ZJFCZL7SSZB5I" },
        "eu-central-1": { "EBHostedZoneId": "Z1FRNW7UH4DEZJ" },
        "eu-west-1": { "EBHostedZoneId": "Z2NYPWQ7DFZAZH" },
        "eu-west-2": { "EBHostedZoneId": "Z1GKAAAUGATPF1" },
        "eu-south-1": { "EBHostedZoneId": "Z10VDYYOA2JFKM" },
        "eu-west-3": { "EBHostedZoneId": "Z5WN6GAYWG5OB" },
        "eu-north-1": { "EBHostedZoneId": "Z23GO28BZ5AETM" },
        "me-south-1": { "EBHostedZoneId": "Z2BBTEKR2I36N2" },
        "sa-east-1": { "EBHostedZoneId": "Z10X7K2B4QSOFV" }  
      }
    },
    "Outputs": {
    }
}